FROM nvidia/cuda:11.4.3-cudnn8-devel-ubuntu20.04

ARG USERNAME
ARG UID
ARG GID

RUN groupadd -g ${GID} ${USERNAME} && useradd -u ${UID} -g ${GID} -s /bin/sh ${USERNAME} && mkdir -p /home/${USERNAME} && chown ${UID}:${GID} /home/${USERNAME}

ENV PATH="${PATH}:/opt/bin"
ENV DEBIAN_FRONTEND=noninteractive 

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    git \
    gdb \
    ca-certificates \
    build-essential \
    libhdf5-dev \
    libssl-dev \
    libzstd-dev \
    autoconf \
    automake \
    python3

WORKDIR /usr/src/dorado 

ADD https://github.com/Kitware/CMake/releases/download/v3.27.0-rc3/cmake-3.27.0-rc3-linux-x86_64.sh /cmake-3.27.0-rc3-linux-x86_64.sh 
RUN mkdir /opt/cmake
RUN sh /cmake-3.27.0-rc3-linux-x86_64.sh --prefix=/opt/cmake --skip-license
RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
RUN cmake --version


# Needed for Dori development container for running
# server inside Dorado compatible environment -
# this uses the Dori STDIN fork (Dorado v0.3.1)

# This uses the latest commit checkout specifically due to need to rebuild image for this

RUN git clone --single-branch --branch dori-stdin-v0.3.1 https://github.com/esteinig/dorado && \   
    cd dorado && git checkout f890668f74035b78921e0145788796a2d29dfd3f && \
    git config --global --add safe.directory "*" && \
    cmake -S . -B cmake-build && \
    cmake --build cmake-build --config Release -j4 && \ 
    cmake --install cmake-build --prefix /opt/dorado 

RUN ln -s /opt/dorado/bin/dorado /usr/local/bin/dorado


# Host user 
USER ${USERNAME}

# Add micromamba installation used in evaluation container which needs Dori access

WORKDIR /home/${USERNAME}
ENV PATH="${PATH}:/home/${USERNAME}/bin"

RUN curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
RUN micromamba shell init --shell bash --root-prefix=~/micromamba

# Development path mounted, access to config files
WORKDIR /usr/src/streamfish 